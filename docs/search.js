window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "uasevent", "modulename": "uasevent", "kind": "module", "doc": "<h2 id=\"summary\">Summary</h2>\n\n<p>uasevent is a Python programme simulating simple atmospheric acoustic\npropagation effects for creating multichannel auralisations of\nunmanned aerial systems (UAS - drones), or other airborne sources,\nin motion.</p>\n\n<p>The model assumes that input source signals have been recorded at a fixed\ndistance and with a fixed rotational speed. Auralisations are created\nassuming free-field propagation and account for the following effects:</p>\n\n<ul>\n<li>Distance-dependent atmospheric absorption of high frequencies</li>\n<li>Doppler effect</li>\n<li>Ground reflection (including path length difference and\nangle-dependent high-frequency absorption)</li>\n<li>Distance-based amplitude panning (DBAP) to spatialise source in 3D\nloudspeaker array (direct sound and ground reflection spatialised\nseparately).</li>\n</ul>\n\n<p><strong>Author</strong>: Marc C. Green (m.c.green@salford.ac.uk)</p>\n\n<p><strong>Affiliation</strong>: University of Salford (Acoustics Research Centre)</p>\n\n<p><strong>Copyright statement</strong>: This file and code is part of work undertaken within\nthe REFMAP project (www.refmap.eu), and is subject to license as detailed\nin the <a href=\"https://github.com/acoustics-code-salford/uas-sound-event\">code repository</a>.</p>\n\n<p>Based on method detailed in: <a href=\"https://doi.org/10.1051/aacus/2020023\">Heutschi, K., Ott, B., Nussbaumer, T., and Wellig, P., \n\"Synthesis of real world drone signals based on lab recordings,\"\nActa Acustica, Vol. 4, No. 6, 2020, p. 24.</a></p>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>The main object implementing the propagation model is <code>UASEventRenderer</code>. This\nobject is initialised using CSV files defining flightpaths in segments. Each\nsegment requires the definition of start and end points in cartesian\nco-ordinates, along with starting and ending speeds in meters per second.\nThe following is an example flightpath configuration file with four segments.</p>\n\n<pre><code>segment, startxyz, endxyz, speeds\nconstant-speed flyby, 10 -200 30, 10 180 30, 30 30\ndecelerate, 10 180 30, 10 200 30, 30 0\naccelerate, 10 200 30, 10 180 30, 0 30\nflyby back, 10 180 30, 10 -200 30, 30 30\n</code></pre>\n\n<p>Using these CSV flightpath definitions, <code>UASEventRenderer</code> calculates the\nposition of the source at every sample time. These positions are used to\ncalculate the delays, distances, and angles required to render the propagation\neffects based on a listener located at the origin of the co-ordinate system. </p>\n\n<p>The listener height is set to 1.5 m by default. This affects the calculation \nof the ground reflection signal in particular. Additional parameters include\nthe ground material, which can be selected from <code>'grass'</code>, <code>'soil'</code>, or\n<code>'asphalt'</code>, and the loudspeaker layout to target with the DBAP panning \n(currently only <code>'Octagon + Cube'</code> is implemented).</p>\n\n<p>The object's <code>render()</code> method can then be used to generate a time-series \nsignal at the receiver point. The input source used should be sufficient in \nlength to cover the time taken to cover the entire defined flightpath.</p>\n\n<p>The following is a basic script for rendering an event:</p>\n\n<pre><code>import soundfile as sf\nfrom uasevent.environment import UASEventRenderer\nfrom uasevent.utils import load_params\n\nx, fs = sf.read('example_source.wav')\nrenderer = UASEventRenderer(\n    load_params('flightpath.csv'),\n    receiver_height=1.5,\n    fs=fs)\n\noutput = renderer.render(x)\n</code></pre>\n"}, {"fullname": "uasevent.environment", "modulename": "uasevent.environment", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "uasevent.environment.UASEventRenderer", "modulename": "uasevent.environment", "qualname": "UASEventRenderer", "kind": "class", "doc": "<p>Main propagation model for rendering of drone flight events.</p>\n"}, {"fullname": "uasevent.environment.UASEventRenderer.__init__", "modulename": "uasevent.environment", "qualname": "UASEventRenderer.__init__", "kind": "function", "doc": "<p>Initialises all necessary attributes for the UASEventRenderer object.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">flight_parameters</span>,</span><span class=\"param\">\t<span class=\"n\">ground_material</span><span class=\"o\">=</span><span class=\"s1\">&#39;grass&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fs</span><span class=\"o\">=</span><span class=\"mi\">48000</span>,</span><span class=\"param\">\t<span class=\"n\">receiver_height</span><span class=\"o\">=</span><span class=\"mf\">1.5</span>,</span><span class=\"param\">\t<span class=\"n\">loudspeaker_mapping</span><span class=\"o\">=</span><span class=\"s1\">&#39;Octagon + Cube&#39;</span></span>)</span>"}, {"fullname": "uasevent.environment.UASEventRenderer.loudspeaker_mapping", "modulename": "uasevent.environment", "qualname": "UASEventRenderer.loudspeaker_mapping", "kind": "variable", "doc": "<p>Layout of loudspeaker array for rendering</p>\n"}, {"fullname": "uasevent.environment.UASEventRenderer.fs", "modulename": "uasevent.environment", "qualname": "UASEventRenderer.fs", "kind": "variable", "doc": "<p>Sampling frequency in Hz (default 48_000)</p>\n"}, {"fullname": "uasevent.environment.UASEventRenderer.receiver_height", "modulename": "uasevent.environment", "qualname": "UASEventRenderer.receiver_height", "kind": "variable", "doc": "<p>Height of receiver position, metres (default 1.5)</p>\n"}, {"fullname": "uasevent.environment.UASEventRenderer.ground_material", "modulename": "uasevent.environment", "qualname": "UASEventRenderer.ground_material", "kind": "variable", "doc": "<p>Material for ground reflection</p>\n"}, {"fullname": "uasevent.environment.UASEventRenderer.flight_parameters", "modulename": "uasevent.environment", "qualname": "UASEventRenderer.flight_parameters", "kind": "variable", "doc": "<p>Segment-wise description of flight path</p>\n"}, {"fullname": "uasevent.environment.UASEventRenderer.render", "modulename": "uasevent.environment", "qualname": "UASEventRenderer.render", "kind": "function", "doc": "<p>Renders output signal based on input parameters.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><code>x</code>\n    Signal to use as UAS source. Assumed to be a stationary recording.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><code>output</code>\n    Signal containing direct and reflected paths reaching receiver.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.environment.PropagationPath", "modulename": "uasevent.environment", "qualname": "PropagationPath", "kind": "class", "doc": "<p>Defines a single propagation path from source to receiver.</p>\n"}, {"fullname": "uasevent.environment.PropagationPath.__init__", "modulename": "uasevent.environment", "qualname": "PropagationPath.__init__", "kind": "function", "doc": "<p>Initialises PropagationPath object.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">flightpath</span>,</span><span class=\"param\">\t<span class=\"n\">reflection_surface</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fs</span><span class=\"o\">=</span><span class=\"mi\">48000</span>,</span><span class=\"param\">\t<span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mf\">343.0</span>,</span><span class=\"param\">\t<span class=\"n\">frame_len</span><span class=\"o\">=</span><span class=\"mi\">512</span>,</span><span class=\"param\">\t<span class=\"n\">loudspeaker_mapping</span><span class=\"o\">=</span><span class=\"s1\">&#39;Octagon + Cube&#39;</span></span>)</span>"}, {"fullname": "uasevent.environment.PropagationPath.fs", "modulename": "uasevent.environment", "qualname": "PropagationPath.fs", "kind": "variable", "doc": "<p>Sampling frequency in Hz (default <code>48_000</code>)</p>\n"}, {"fullname": "uasevent.environment.PropagationPath.reflection_surface", "modulename": "uasevent.environment", "qualname": "PropagationPath.reflection_surface", "kind": "variable", "doc": "<p>String to select absorption coefficients for ground reflection.\nOptions <code>\"grass\"</code>, <code>\"soil\"</code>, <code>\"asphalt\"</code>.</p>\n"}, {"fullname": "uasevent.environment.PropagationPath.frame_len", "modulename": "uasevent.environment", "qualname": "PropagationPath.frame_len", "kind": "variable", "doc": "<p>Number of samples for frames used for time-varying atmospheric\nabsorption and ground reflection filtering (default <code>512</code>).</p>\n"}, {"fullname": "uasevent.environment.PropagationPath.loudspeaker_mapping", "modulename": "uasevent.environment", "qualname": "PropagationPath.loudspeaker_mapping", "kind": "variable", "doc": "<p>String to select layout of loudspeaker array for rendering\n(default <code>\"Octagon + Cube\"</code>).</p>\n"}, {"fullname": "uasevent.environment.PropagationPath.flightpath", "modulename": "uasevent.environment", "qualname": "PropagationPath.flightpath", "kind": "variable", "doc": "<p>Array describing position of source at every sample point.</p>\n"}, {"fullname": "uasevent.environment.PropagationPath.process", "modulename": "uasevent.environment", "qualname": "PropagationPath.process", "kind": "function", "doc": "<p>Processes input signal to add effects of propagation along single\nspecified path. Incorporates amplitude envelopes, doppler effect,\nand filtering for atmospheric absorption and ground reflection.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><code>x</code>\n    Signal to use as UAS source. Assumed to be a stationary recording.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><code>output</code>\n    Array containing signal reaching receiver along specified path.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.environment.GroundReflectionFilter", "modulename": "uasevent.environment", "qualname": "GroundReflectionFilter", "kind": "class", "doc": "<p>Implements material and incident angle-dependent lowpass filter\nto simulate ground reflection.</p>\n"}, {"fullname": "uasevent.environment.GroundReflectionFilter.__init__", "modulename": "uasevent.environment", "qualname": "GroundReflectionFilter.__init__", "kind": "function", "doc": "<p>Initialises GroundReflectionFilter.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s1\">&#39;asphalt&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">freqs</span><span class=\"o\">=</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">2.00000000e+01</span><span class=\"p\">,</span> <span class=\"mf\">2.31137509e+01</span><span class=\"p\">,</span> <span class=\"mf\">2.67122741e+01</span><span class=\"p\">,</span> <span class=\"mf\">3.08710426e+01</span><span class=\"p\">,</span>\n       <span class=\"mf\">3.56772794e+01</span><span class=\"p\">,</span> <span class=\"mf\">4.12317876e+01</span><span class=\"p\">,</span> <span class=\"mf\">4.76510634e+01</span><span class=\"p\">,</span> <span class=\"mf\">5.50697406e+01</span><span class=\"p\">,</span>\n       <span class=\"mf\">6.36434134e+01</span><span class=\"p\">,</span> <span class=\"mf\">7.35519003e+01</span><span class=\"p\">,</span> <span class=\"mf\">8.50030153e+01</span><span class=\"p\">,</span> <span class=\"mf\">9.82369262e+01</span><span class=\"p\">,</span>\n       <span class=\"mf\">1.13531192e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.31206585e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.51633817e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.75241313e+02</span><span class=\"p\">,</span>\n       <span class=\"mf\">2.02524204e+02</span><span class=\"p\">,</span> <span class=\"mf\">2.34054700e+02</span><span class=\"p\">,</span> <span class=\"mf\">2.70494102e+02</span><span class=\"p\">,</span> <span class=\"mf\">3.12606665e+02</span><span class=\"p\">,</span>\n       <span class=\"mf\">3.61275630e+02</span><span class=\"p\">,</span> <span class=\"mf\">4.17521747e+02</span><span class=\"p\">,</span> <span class=\"mf\">4.82524684e+02</span><span class=\"p\">,</span> <span class=\"mf\">5.57647768e+02</span><span class=\"p\">,</span>\n       <span class=\"mf\">6.44466581e+02</span><span class=\"p\">,</span> <span class=\"mf\">7.44802002e+02</span><span class=\"p\">,</span> <span class=\"mf\">8.60758399e+02</span><span class=\"p\">,</span> <span class=\"mf\">9.94767763e+02</span><span class=\"p\">,</span>\n       <span class=\"mf\">1.14964072e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.32862546e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.53547590e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.77453037e+03</span><span class=\"p\">,</span>\n       <span class=\"mf\">2.05080265e+03</span><span class=\"p\">,</span> <span class=\"mf\">2.37008709e+03</span><span class=\"p\">,</span> <span class=\"mf\">2.73908013e+03</span><span class=\"p\">,</span> <span class=\"mf\">3.16552080e+03</span><span class=\"p\">,</span>\n       <span class=\"mf\">3.65835297e+03</span><span class=\"p\">,</span> <span class=\"mf\">4.22791297e+03</span><span class=\"p\">,</span> <span class=\"mf\">4.88614637e+03</span><span class=\"p\">,</span> <span class=\"mf\">5.64685851e+03</span><span class=\"p\">,</span>\n       <span class=\"mf\">6.52600406e+03</span><span class=\"p\">,</span> <span class=\"mf\">7.54202162e+03</span><span class=\"p\">,</span> <span class=\"mf\">8.71622046e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.00732274e+04</span><span class=\"p\">,</span>\n       <span class=\"mf\">1.16415035e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.34539406e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.55485517e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.79692675e+04</span><span class=\"p\">,</span>\n       <span class=\"mf\">2.07668587e+04</span><span class=\"p\">,</span> <span class=\"mf\">2.40000000e+04</span><span class=\"p\">])</span>,</span><span class=\"param\">\t<span class=\"n\">Z_0</span><span class=\"o\">=</span><span class=\"mf\">413.26</span>,</span><span class=\"param\">\t<span class=\"n\">fs</span><span class=\"o\">=</span><span class=\"mi\">48000</span>,</span><span class=\"param\">\t<span class=\"n\">n_taps</span><span class=\"o\">=</span><span class=\"mi\">21</span></span>)</span>"}, {"fullname": "uasevent.environment.GroundReflectionFilter.freqs", "modulename": "uasevent.environment", "qualname": "GroundReflectionFilter.freqs", "kind": "variable", "doc": "<p>array of frequencies used to evaluate frequency response</p>\n"}, {"fullname": "uasevent.environment.GroundReflectionFilter.Z_0", "modulename": "uasevent.environment", "qualname": "GroundReflectionFilter.Z_0", "kind": "variable", "doc": "<p>characteristic acoustic impedance of air [rayl/m^2]</p>\n"}, {"fullname": "uasevent.environment.GroundReflectionFilter.material", "modulename": "uasevent.environment", "qualname": "GroundReflectionFilter.material", "kind": "variable", "doc": "<p>string to select absorption coefficients for ground reflection</p>\n"}, {"fullname": "uasevent.environment.GroundReflectionFilter.fs", "modulename": "uasevent.environment", "qualname": "GroundReflectionFilter.fs", "kind": "variable", "doc": "<p>Sampling frequency in Hz</p>\n"}, {"fullname": "uasevent.environment.GroundReflectionFilter.n_taps", "modulename": "uasevent.environment", "qualname": "GroundReflectionFilter.n_taps", "kind": "variable", "doc": "<p>Number of taps for FIR filter</p>\n"}, {"fullname": "uasevent.environment.GroundReflectionFilter.filter", "modulename": "uasevent.environment", "qualname": "GroundReflectionFilter.filter", "kind": "function", "doc": "<p>Filters input signal based on angle-of-incidence on ground plane.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><code>x</code>:\n    Frame of source signal.</p>\n\n<p><code>position</code>:\n    Array describing mean position of source during frame.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><code>lowpass_sig</code>:\n    Filtered signal.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">position</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.environment.AtmosphericAbsorptionFilter", "modulename": "uasevent.environment", "qualname": "AtmosphericAbsorptionFilter", "kind": "class", "doc": "<p>Implements distance-dependent lowpass filter to simulate\natmospheric absorption.</p>\n"}, {"fullname": "uasevent.environment.AtmosphericAbsorptionFilter.__init__", "modulename": "uasevent.environment", "qualname": "AtmosphericAbsorptionFilter.__init__", "kind": "function", "doc": "<p>Initialises GroundReflectionFilter.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">freqs</span><span class=\"o\">=</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">2.00000000e+01</span><span class=\"p\">,</span> <span class=\"mf\">2.31137509e+01</span><span class=\"p\">,</span> <span class=\"mf\">2.67122741e+01</span><span class=\"p\">,</span> <span class=\"mf\">3.08710426e+01</span><span class=\"p\">,</span>\n       <span class=\"mf\">3.56772794e+01</span><span class=\"p\">,</span> <span class=\"mf\">4.12317876e+01</span><span class=\"p\">,</span> <span class=\"mf\">4.76510634e+01</span><span class=\"p\">,</span> <span class=\"mf\">5.50697406e+01</span><span class=\"p\">,</span>\n       <span class=\"mf\">6.36434134e+01</span><span class=\"p\">,</span> <span class=\"mf\">7.35519003e+01</span><span class=\"p\">,</span> <span class=\"mf\">8.50030153e+01</span><span class=\"p\">,</span> <span class=\"mf\">9.82369262e+01</span><span class=\"p\">,</span>\n       <span class=\"mf\">1.13531192e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.31206585e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.51633817e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.75241313e+02</span><span class=\"p\">,</span>\n       <span class=\"mf\">2.02524204e+02</span><span class=\"p\">,</span> <span class=\"mf\">2.34054700e+02</span><span class=\"p\">,</span> <span class=\"mf\">2.70494102e+02</span><span class=\"p\">,</span> <span class=\"mf\">3.12606665e+02</span><span class=\"p\">,</span>\n       <span class=\"mf\">3.61275630e+02</span><span class=\"p\">,</span> <span class=\"mf\">4.17521747e+02</span><span class=\"p\">,</span> <span class=\"mf\">4.82524684e+02</span><span class=\"p\">,</span> <span class=\"mf\">5.57647768e+02</span><span class=\"p\">,</span>\n       <span class=\"mf\">6.44466581e+02</span><span class=\"p\">,</span> <span class=\"mf\">7.44802002e+02</span><span class=\"p\">,</span> <span class=\"mf\">8.60758399e+02</span><span class=\"p\">,</span> <span class=\"mf\">9.94767763e+02</span><span class=\"p\">,</span>\n       <span class=\"mf\">1.14964072e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.32862546e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.53547590e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.77453037e+03</span><span class=\"p\">,</span>\n       <span class=\"mf\">2.05080265e+03</span><span class=\"p\">,</span> <span class=\"mf\">2.37008709e+03</span><span class=\"p\">,</span> <span class=\"mf\">2.73908013e+03</span><span class=\"p\">,</span> <span class=\"mf\">3.16552080e+03</span><span class=\"p\">,</span>\n       <span class=\"mf\">3.65835297e+03</span><span class=\"p\">,</span> <span class=\"mf\">4.22791297e+03</span><span class=\"p\">,</span> <span class=\"mf\">4.88614637e+03</span><span class=\"p\">,</span> <span class=\"mf\">5.64685851e+03</span><span class=\"p\">,</span>\n       <span class=\"mf\">6.52600406e+03</span><span class=\"p\">,</span> <span class=\"mf\">7.54202162e+03</span><span class=\"p\">,</span> <span class=\"mf\">8.71622046e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.00732274e+04</span><span class=\"p\">,</span>\n       <span class=\"mf\">1.16415035e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.34539406e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.55485517e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.79692675e+04</span><span class=\"p\">,</span>\n       <span class=\"mf\">2.07668587e+04</span><span class=\"p\">,</span> <span class=\"mf\">2.40000000e+04</span><span class=\"p\">])</span>,</span><span class=\"param\">\t<span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mf\">20.0</span>,</span><span class=\"param\">\t<span class=\"n\">humidity</span><span class=\"o\">=</span><span class=\"mf\">80.0</span>,</span><span class=\"param\">\t<span class=\"n\">pressure</span><span class=\"o\">=</span><span class=\"mf\">101.325</span>,</span><span class=\"param\">\t<span class=\"n\">n_taps</span><span class=\"o\">=</span><span class=\"mi\">21</span>,</span><span class=\"param\">\t<span class=\"n\">fs</span><span class=\"o\">=</span><span class=\"mi\">48000</span></span>)</span>"}, {"fullname": "uasevent.environment.AtmosphericAbsorptionFilter.n_taps", "modulename": "uasevent.environment", "qualname": "AtmosphericAbsorptionFilter.n_taps", "kind": "variable", "doc": "<p>Number of taps for FIR filter</p>\n"}, {"fullname": "uasevent.environment.AtmosphericAbsorptionFilter.freqs", "modulename": "uasevent.environment", "qualname": "AtmosphericAbsorptionFilter.freqs", "kind": "variable", "doc": "<p>array of frequencies used to evaluate frequency response</p>\n"}, {"fullname": "uasevent.environment.AtmosphericAbsorptionFilter.fs", "modulename": "uasevent.environment", "qualname": "AtmosphericAbsorptionFilter.fs", "kind": "variable", "doc": "<p>Sampling frequency [Hz]</p>\n"}, {"fullname": "uasevent.environment.AtmosphericAbsorptionFilter.filter", "modulename": "uasevent.environment", "qualname": "AtmosphericAbsorptionFilter.filter", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">position</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.environment.DBAP", "modulename": "uasevent.environment", "qualname": "DBAP", "kind": "class", "doc": "<p>Implements distance-based amplitude panning.\nBased on <a href=\"https://github.com/PasqualeMainolfi/Pannix/\">https://github.com/PasqualeMainolfi/Pannix/</a></p>\n"}, {"fullname": "uasevent.environment.DBAP.__init__", "modulename": "uasevent.environment", "qualname": "DBAP.__init__", "kind": "function", "doc": "<p>Initialises DBAP.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loudspeaker_locs</span></span>)</span>"}, {"fullname": "uasevent.environment.DBAP.loudspeaker_locs", "modulename": "uasevent.environment", "qualname": "DBAP.loudspeaker_locs", "kind": "variable", "doc": "<p>Array defining cartesian locations of array loudspeakers.</p>\n"}, {"fullname": "uasevent.environment.DBAP.gains", "modulename": "uasevent.environment", "qualname": "DBAP.gains", "kind": "function", "doc": "<p>Calculates gains applicable to each loudspeaker for input array of\nsource positions.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><code>pos_arr</code>\n    Array describing position of source at each sample time.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><code>gains</code>\n    Array of gains for specified loudspeaker layout.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos_arr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.interpolators", "modulename": "uasevent.interpolators", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "uasevent.interpolators.FractionalInterpolator", "modulename": "uasevent.interpolators", "qualname": "FractionalInterpolator", "kind": "class", "doc": "<p>Defines framework for fractional delay interpolators.</p>\n"}, {"fullname": "uasevent.interpolators.FractionalInterpolator.__init__", "modulename": "uasevent.interpolators", "qualname": "FractionalInterpolator.__init__", "kind": "function", "doc": "<p>Initialises interpolator object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">delta</span></span>)</span>"}, {"fullname": "uasevent.interpolators.FractionalInterpolator.delta", "modulename": "uasevent.interpolators", "qualname": "FractionalInterpolator.delta", "kind": "variable", "doc": "<p>Fraction of a sample by which to delay input signal.</p>\n"}, {"fullname": "uasevent.interpolators.FractionalInterpolator.x", "modulename": "uasevent.interpolators", "qualname": "FractionalInterpolator.x", "kind": "variable", "doc": "<p>Signal on which to apply the fractional delay.</p>\n"}, {"fullname": "uasevent.interpolators.LinearInterpolator", "modulename": "uasevent.interpolators", "qualname": "LinearInterpolator", "kind": "class", "doc": "<p>Linear interpolation method for fractional delay.</p>\n", "bases": "FractionalInterpolator"}, {"fullname": "uasevent.interpolators.AllpassInterpolator", "modulename": "uasevent.interpolators", "qualname": "AllpassInterpolator", "kind": "class", "doc": "<p>Allpass filter method for fractional delay.</p>\n", "bases": "FractionalInterpolator"}, {"fullname": "uasevent.interpolators.AllpassInterpolator.delta", "modulename": "uasevent.interpolators", "qualname": "AllpassInterpolator.delta", "kind": "variable", "doc": "<p>Fraction of a sample by which to delay input signal.</p>\n"}, {"fullname": "uasevent.interpolators.SincInterpolator", "modulename": "uasevent.interpolators", "qualname": "SincInterpolator", "kind": "class", "doc": "<p>Sinc interpolation method for fractional delay.</p>\n", "bases": "FractionalInterpolator"}, {"fullname": "uasevent.interpolators.SincInterpolator.__init__", "modulename": "uasevent.interpolators", "qualname": "SincInterpolator.__init__", "kind": "function", "doc": "<p>Initialises interpolator object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">delta</span>, </span><span class=\"param\"><span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">35</span></span>)</span>"}, {"fullname": "uasevent.interpolators.SincInterpolator.N", "modulename": "uasevent.interpolators", "qualname": "SincInterpolator.N", "kind": "variable", "doc": "<p>Number of taps for sinc FIR filter.</p>\n"}, {"fullname": "uasevent.interpolators.interpolate", "modulename": "uasevent.interpolators", "qualname": "interpolate", "kind": "function", "doc": "<p>Helper function returning a single interpolated sample of an input signal.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><code>x</code>: signal on which to apply the fractional delay</p>\n\n<p><code>n</code>: whole number index to sample</p>\n\n<p><code>s</code>: fraction by which to interpolate between samples</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><code>value</code>: value of interpolated sample</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span>,</span><span class=\"param\">\t<span class=\"n\">n</span>,</span><span class=\"param\">\t<span class=\"n\">s</span>,</span><span class=\"param\">\tInterpAlgo=&lt;class &#x27;uasevent.interpolators.SincInterpolator&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">interp_win_len</span><span class=\"o\">=</span><span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.utils", "modulename": "uasevent.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "uasevent.utils.test_sine", "modulename": "uasevent.utils", "qualname": "test_sine", "kind": "function", "doc": "<p>Generate a sine wave signal of length t.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p><code>t</code>: Length of sine signal in seconds</p>\n\n<p><code>f_0</code>: Frequency [Hz] (default 440)</p>\n\n<p><code>A</code>: Amplitude (default 0.75)</p>\n\n<p><code>fs</code>: Sampling frequency [Hz] (default 48_000)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><code>sig</code>: Array containing sinusoidal signal.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">f_0</span><span class=\"o\">=</span><span class=\"mi\">440</span>, </span><span class=\"param\"><span class=\"n\">A</span><span class=\"o\">=</span><span class=\"mf\">0.75</span>, </span><span class=\"param\"><span class=\"n\">fs</span><span class=\"o\">=</span><span class=\"mi\">48000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.utils.load_params", "modulename": "uasevent.utils", "qualname": "load_params", "kind": "function", "doc": "<p>Load flight parameters from a csv file to required array format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">csv_file</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.utils.nearest_whole_fraction", "modulename": "uasevent.utils", "qualname": "nearest_whole_fraction", "kind": "function", "doc": "<p>Return nearest integer and fraction to input sample position.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.utils.cart_to_sph", "modulename": "uasevent.utils", "qualname": "cart_to_sph", "kind": "function", "doc": "<p>Transform between cartesian and polar co-ordinates.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><code>xyz</code>: Array of cartesian co-ordinates.</p>\n\n<p><code>return_r</code>: Bool toggling output of radius. If <code>False</code>, only azimuth and\nelevation will be output.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><code>sph_coords</code>: Array of spherical co-ordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyz</span>, </span><span class=\"param\"><span class=\"n\">return_r</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.utils.vector_t", "modulename": "uasevent.utils", "qualname": "vector_t", "kind": "function", "doc": "<p>Calculate source position at each sample time along specified trajectory.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p><code>start</code>: Cartesian co-ordinates of starting position.</p>\n\n<p><code>end</code>: Cartesian co-ordinates of ending position.</p>\n\n<p><code>speeds</code>: Start and end speeds of specified flight segment.</p>\n\n<p><code>fs</code>: Sampling frequency [Hz] (default 48_000)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p><code>xyz</code>: Array describing position of source at each sample time based on\nthe specified flight segment.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">start</span>, </span><span class=\"param\"><span class=\"n\">end</span>, </span><span class=\"param\"><span class=\"n\">speeds</span>, </span><span class=\"param\"><span class=\"n\">fs</span><span class=\"o\">=</span><span class=\"mi\">48000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.utils.rectify", "modulename": "uasevent.utils", "qualname": "rectify", "kind": "function", "doc": "<p>Rectifies signal (negative segments mirrored into positive).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.utils.load_mapping", "modulename": "uasevent.utils", "qualname": "load_mapping", "kind": "function", "doc": "<p>Loads specification of loudspeaker position to required array format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">mapping_file</span><span class=\"o\">=</span><span class=\"s1\">&#39;mappings/mappings.json&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "uasevent.utils.sph_to_cart", "modulename": "uasevent.utils", "qualname": "sph_to_cart", "kind": "function", "doc": "<p>Converts between spherical and cartesian co-ordinate systems.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sph_co_ords</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();